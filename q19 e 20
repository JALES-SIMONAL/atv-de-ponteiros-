#include <stdio.h>
#include <gc.h>
#include <time.h>
#include <stdlib.h>
int main(){
 clock_t t1, t2, t3, t4, t5, t6;
 int *x;
 t1 = clock();
 for (int i = 0; i < 100000000; i++){
 x = malloc(4 * sizeof(int));
 free(x);
 }
 t2 = clock();
 t3 = difftime(t2, t1);
 printf("\nUsando a função free: %f", ((float)t3/CLOCKS_PER_SEC));
 t4 = clock();
 for (int i = 0; i < 100000000; i++){
 x = GC_malloc(4 * sizeof(int));
 }
 t5 = clock();
 t6 = difftime(t5, t4);
 printf("\nUsando a biblioteca GClib: %f\n", ((float)t6/CLOCKS_PER_SEC));
 return 0;
}
Usando o programa acima obtive os seguintes resultados em segundos:
Como podemos ver, se estamos desenvolvendo um programa que deve priorizar a velocidade de
processamento é preferível não utilizarmos a biblioteca Gclib, visto que ela aumenta
consideravelmente o tempo de processamento.
